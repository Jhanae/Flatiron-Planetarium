[{"/Users/jhanaechisholm/Phase-2/Phase2-Project/src/index.js":"1","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/reportWebVitals.js":"2","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/App.js":"3","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/Contact.js":"4","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/PlanetContainer.js":"5","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/Navbar.js":"6","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/AddNewForm.js":"7","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/Footer.js":"8","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/About.js":"9","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/PlanetInfo.js":"10","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/home.js":"11","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/CommentSection.js":"12","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/Distance.js":"13","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/Filter.js":"14","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/PlanetElement.js":"15","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/DistanceElement.js":"16"},{"size":547,"mtime":1630245617417,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1630245617417,"results":"19","hashOfConfig":"18"},{"size":1816,"mtime":1630245616403,"results":"20","hashOfConfig":"18"},{"size":1454,"mtime":1630245617125,"results":"21","hashOfConfig":"18"},{"size":2578,"mtime":1630245617392,"results":"22","hashOfConfig":"18"},{"size":2168,"mtime":1630245617126,"results":"23","hashOfConfig":"18"},{"size":5055,"mtime":1630245617124,"results":"24","hashOfConfig":"18"},{"size":1683,"mtime":1630245617126,"results":"25","hashOfConfig":"18"},{"size":1024,"mtime":1630245617124,"results":"26","hashOfConfig":"18"},{"size":3138,"mtime":1630245617393,"results":"27","hashOfConfig":"18"},{"size":935,"mtime":1630245617416,"results":"28","hashOfConfig":"18"},{"size":2334,"mtime":1630245617125,"results":"29","hashOfConfig":"18"},{"size":1304,"mtime":1630245617125,"results":"30","hashOfConfig":"18"},{"size":1658,"mtime":1630245617125,"results":"31","hashOfConfig":"18"},{"size":1071,"mtime":1630245617392,"results":"32","hashOfConfig":"18"},{"size":732,"mtime":1630245617125,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wyodtf",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"/Users/jhanaechisholm/Phase-2/Phase2-Project/src/index.js",[],"/Users/jhanaechisholm/Phase-2/Phase2-Project/src/reportWebVitals.js",[],"/Users/jhanaechisholm/Phase-2/Phase2-Project/src/App.js",["75"],"import './App.css';\nimport React, {useState, useEffect} from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Navbar from './components/Navbar';\nimport PlanetContainer from './components/PlanetContainer';\nimport Home from './components/home'\nimport AddNewForm from './components/AddNewForm'\nimport About from './components/About'\nimport Footer from './components/Footer';\nimport PlanetInfo from './components/PlanetInfo';\nimport CommentSection from './components/CommentSection';\nimport Contact from './components/Contact.js';\nimport Distance from './components/Distance';\n\n\nfunction App() {\n  const [planetData, setPlanetData]=useState([])\n\n  const API=\"http://localhost:3000/PlanetData\"\n\n  useEffect(()=>{\n    fetch(API)\n    .then(r=>r.json())\n    .then((data)=>{\n      setPlanetData(data)\n    })\n  },[])\n\n\n  return (\n    <div className=\"App page-container\">\n      <div className=\"content-wrap\" >\n      <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/home\" component={Home}/>\n        <Route path=\"/planets\" component={() => <PlanetContainer data={planetData}/>} />\n        <Route path=\"/distance\" component={() => <Distance planets={planetData}/>} />\n        <Route exact path=\"/newplanet\" component={()=> <AddNewForm setPlanetData={setPlanetData} planetData={planetData}/>}/>\n        <Route exact path=\"/about-us\" component={About}/>\n        <Route exact path=\"/reviews\" component={CommentSection}/>\n        <Route exact path=\"/contact-us\" component={Contact}/>\n        {planetData.map((planet)=>{return <Route exact path={`/planet/${planet.name}`} component={()=><PlanetInfo planet={planet}/>}/>})}\n        <Route path=\"\" component={Home}/>\n      </Switch>\n      </Router>\n      </div>\n      {/* <Footer/> */}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/Contact.js",[],"/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/PlanetContainer.js",["76"],"import React, {useState} from 'react'\nimport PlanetElement from './PlanetElement'\n// import Button from './button'\nimport Filter from './Filter'\nimport Footer from './Footer'\n\nconst PlanetContainer = ({data}) => {\n\n    \n    const [planetItem, setPlanetItem] = useState(data)\n    const [searchText, setSearch] = useState(\"\")\n    const [type, setType] = useState('All')\n    let planet ;\n    \n    function handleDelete(planetID){\n        const filteredArray = planetItem.filter((item) => item.id !== planetID)\n        // console.log(filteredArray)\n\n        fetch(`http://localhost:3000/PlanetData/${planetID}`,{\n            method: \"DELETE\",\n        })\n        .then(data => setPlanetItem(filteredArray))\n    }\n\n    function sortAlphabetically(){\n        data.sort((a, b) => (a.name > b.name) ? 1 : -1)\n    }\n    function sortRadius(){\n        data.sort((a, b) => (a.radius > b.radius) ? 1 : -1)\n    }\n    function sortDistance(){\n        data.sort((a, b) => (a.distanceFromSun < b.distanceFromSun) ? 1 : -1)\n    }\n    \n\n    // filter data prop\n    const filterText = planetItem.filter(item => item.name.toLowerCase().includes(searchText.toLowerCase()))\n\n    //  each type\n    const filterType = filterText.filter(item => item.type === type)\n\n    if(type === 'All')\n    {\n        console.log(type)\n        planet = filterText.map(item => {\n            return <PlanetElement planet={item} key={item.id} handleDelete={handleDelete} />\n         })\n    }\n    else{\n        console.log('cant get this function right')\n        planet = filterType.map(item => {\n            return <PlanetElement planet={item} key={item.id}  handleDelete={handleDelete}  />\n         })\n    }  \n\n     return (\n        <div className=\"planet-container container-fluid  justify-content-center\">\n            <div className=\"container\">\n            \n                <Filter sortAlphabetically={sortAlphabetically} sortRadius={sortRadius} sortDistance={sortDistance} setType={setType}/>\n                <div className=\"input-group-lg\">\n                <input\n                    className=\"filterSearch\"\n                    type=\"text\"\n                    placeholder=\"Search Plants...\"\n                    onChange={(e) => setSearch(e.target.value)}\n                />\n                <i className=\"circular search link icon\" />\n                </div>\n            </div>\n            <div className=\"mb-4 row\">\n                    {planet}\n                    <br/>\n            </div>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n        </div>\n    )\n}\nexport default PlanetContainer;","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/Navbar.js",[],"/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/AddNewForm.js",["77"],"import React,{useState} from \"react\";\nimport Footer from \"./Footer\";\n// import background from \"./Pictures/space.jpeg\"\n\nfunction AddNewForm ({planetData,setPlanetData}){\n    const [name, setName]=useState(\"\")\n    const [moons, setMoons]=useState(\"\")\n    const [radius, setRadius]=useState(\"\")\n    const [distance, setDistance]=useState(\"\")\n    const [temperature,setTemperature]=useState(\"\")\n    const [type, setType]=useState(\"Terrestrial\")\n    const [image,setImage]=useState(\"\")\n    const [desc, setDesc]=useState(\"\")\n    \n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const formData={name:name, moons:moons, radius:radius,\n         distanceFromSun:distance, temperatureInF:temperature,\n         type:type, image:image, description:desc}\n    \n    const response= await fetch(\"http://localhost:3000/PlanetData\",{\n        headers: {\"Content-Type\": \"application/json\"},\n        method:\"POST\",\n        body: JSON.stringify(formData)\n    })\n    const newPlanet=await response.json()\n    const dataArray=[...planetData,newPlanet]\n    setPlanetData(dataArray)\n    \n\n  }\n\n    function handleName(e){\n        setName(e.target.value)\n    }\n    function handleMoons(e){\n        setMoons(e.target.value)\n    }\n    function handleRadius(e){\n        setRadius(e.target.value)\n    }\n    function handleDistance(e){\n        setDistance(e.target.value)\n    }\n    function handleTemperature(e){\n        setTemperature(e.target.value)\n    }\n    function handleType(e){\n        setType(e.target.value)\n    }\n    function handleImage(e){\n        setImage(e.target.value)\n    }\n    function handleDesc(e){\n        setDesc(e.target.value)\n    }\n\n    return (\n        <div className=\"form-container form-holder\" >\n            <br />\n            <br />\n            <br />\n            <br />\n        <h4 className=\"header text-light\">Add New Planet</h4>\n        <form className=\"formItem\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n            <div className=\"row\">\n                <label className=\"form-label\" style={{color:\"white\"}} htmlFor=\"name\">Planet Name:</label>\n                <input className=\"form-input \"  placeholder=\"Planet Name\" type=\"text\" id=\"name\" name=\"name\" value={name} onChange={handleName}></input>\n            </div>\n            <div className=\"row\">\n            <label className=\"form-label\" style={{color:\"white\"}} htmlFor=\"moons\">Number of Moons:</label>\n            <input className=\"input form-input \" type=\"text\" id=\"moons\" name=\"moons\" placeholder=\"Moons\" value={moons} onChange={handleMoons}></input>\n            </div>\n            <div className=\"row\">\n            <label className=\"form-label\"style={{color:\"white\"}} htmlFor=\"radius\">Radius of Planet:</label>\n            <input className=\"input form-input \" type=\"text\" id=\"radius\" name=\"radius\" placeholder=\"Radius\" value={radius} onChange={handleRadius}></input>\n            </div>\n            <div className=\"row\">\n            <label className=\"form-label\"style={{color:\"white\"}} htmlFor=\"distance\">Distance from the Sun in Mi.:</label>\n            <input className=\"input form-input \" type=\"text\" id=\"distance\" name=\"distance\" placeholder=\"Distance\" value={distance} onChange={handleDistance}></input>\n            </div>\n            <div className=\"row\">\n                <label className=\"form-label\"style={{color:\"white\"}} htmlFor=\"temperature\">Temperature in degrees F:</label>\n                <input className=\"input form-input \" type=\"text\" id=\"temperature\" name=\"temperature\" placeholder=\"Temperature\" value={temperature} onChange={handleTemperature}></input>\n            </div>\n            <div className=\"row\">\n                <label className=\"form-label\" style={{color:\"white\"}} htmlFor=\"type\">Type:</label>\n                <select className=\"form-input  input\" id=\"type\" name=\"type\" value={type} onChange={handleType}>\n                    <option value=\"Terrestrial\">Terrestrial</option>\n                    <option value=\"Gas Giant\">Gas Giant</option>\n                    <option value=\"Ice Giant\">Ice Giant</option>\n                    <option value=\"Dwarf Planet\">Dwarf Planet</option>\n                </select>\n            </div>\n            <div className=\"row \">\n                <label className=\"form-label\"style={{color:\"white\"}} htmlFor=\"image\">Image URL:</label>\n                <input className=\"input form-input \" type=\"text\" id=\"image\" name=\"image\" placeholder=\"Image\" value={image} onChange={handleImage}></input>\n            </div>\n            <div className=\"row \">\n            <label className=\"form-label\" style={{color:\"white\"}} htmlFor=\"description\">Description:</label>\n            <input className=\"input form-input \" type=\"text\" id=\"description\" name=\"description\" placeholder=\"Description\" value={desc} onChange={handleDesc}></input>\n            </div>\n            <div className=\"row\">\n            <input className=\"form-input-btn input form-input sumbit-button\" type=\"submit\"></input>\n            </div>\n            </div>\n    </form>\n    {/* <Footer /> */}\n    </div>\n)\n\n}\nexport default AddNewForm;\n\n","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/Footer.js",[],"/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/About.js",[],"/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/PlanetInfo.js",["78"],"import React, {useState} from \"react\";\nimport './PlanetInfo.css'\nimport Footer from \"./Footer\";\n\nfunction PlanetInfo({planet}){\n\nconst [toggleState, setToggleState] = useState(1);\n\nconst toggleTab = (index) => {\n  setToggleState(index);\n};\n\nreturn (\n    <div className=\"PlanetInfo\">\n        <br/>\n        <h1 className=\"card-title text-light\">{planet.name}</h1>\n        <img src={planet.image} alt={planet.name} />\n    <div className=\"tab-container\">\n        <div className=\"bloc-tabs\">\n        <button\n            className={toggleState === 7 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(7)}\n        >\n            Type\n        </button>\n        <button\n            className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(1)}\n        >\n            Moons\n        </button>\n        <button\n            className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(2)}\n        >\n            Radius\n        </button>\n        <button\n            className={toggleState === 3 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(3)}\n        >\n            Distance\n        </button>\n        <button\n            className={toggleState === 4 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(4)}\n        >\n            Temperature\n        </button>\n        <button\n            className={toggleState === 5 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(5)}\n        >\n            Description\n        </button>\n        </div>\n\n        <div className=\"content-tabs\">\n        <div\n            className={toggleState === 1 ? \"content  active-content\" : \"content\"}\n        >\n            <h5>{planet.name} has {planet.moons} moon(s)</h5>\n            \n        </div>\n\n        <div\n            className={toggleState === 2 ? \"content  active-content\" : \"content\"}\n        >\n            <h5>{planet.name} has a radius of {planet.radius} miles.</h5>\n            \n            {/* <p>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente\n            voluptatum qui adipisci.\n            </p> */}\n        </div>\n\n        <div\n            className={toggleState === 3 ? \"content  active-content\" : \"content\"}\n        >\n            <h5>{planet.name} is approximately {planet.distanceFromSun} million miles away from the sun.</h5>\n            \n        </div>\n\n        <div\n            className={toggleState === 4 ? \"content  active-content\" : \"content\"}\n        >\n            <h5>{planet.name} is approximately {planet.temperatureInF} degrees fahrenheit</h5>\n            \n        </div>\n        <div\n            className={toggleState === 5 ? \"content  active-content\" : \"content\"}\n        >\n            <h5>{planet.description}</h5>\n            \n        </div>\n        <div\n            className={toggleState === 7 ? \"content  active-content\" : \"content\"}\n        >\n            <h5>{planet.name} is a {planet.type}.</h5>\n            \n        </div>\n        </div><br/>\n    <br />\n    </div>\n    <br/>\n    <br />\n    <br/>\n    <br />\n    <li/>\n \n  </div>\n);\n}\n\nexport default PlanetInfo","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/home.js",[],"/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/CommentSection.js",["79"],"import React, {useState} from 'react'\nimport image from \"../Pictures/space.jpeg\"\nimport Footer from './Footer'\n\nfunction CommentSection(){\n    const [commentArray, setCommentArray]=useState([])\n    const [newComment, setNewComment]=useState(\"\")\n\n    function handleSubmit(e){\n        e.preventDefault()\n        console.log(newComment)\n        setCommentArray([...commentArray,newComment])\n    }\n\n    const ColoredLine = ({ color }) => (\n        <hr\n            style={{\n                color: color,\n                backgroundColor: color,\n                height: 0.5,\n                width: 6\n            }}\n        />\n    );\n\n    return (\n        <div className=\"review-container \">\n            <br />\n\n            <h1 className=\"text-light\">Reviews</h1>\n            <ColoredLine className=\"hr\" color=\"white\" />\n            <hr className=\"text-divider\"/>\n            <div className=\"review-holder\">\n            {/* <ul className=\"ul-container\"> */}\n                <div className=\"card text-white bg-info text-container\">\n                    <p className=\"text-light\">Astounding! I had no idea Pluto was no longer a planet.</p>\n                </div>\n                <div className=\"card text-white bg-info text-container\">\n                    <p className=\"text-light\">Ten stars for Saturn! Just the coolest.</p>\n                </div>\n                {commentArray.map((comment) => {\n                    return(\n                    \n                <div className=\"card text-white bg-info text-container\">\n                    <p className=\"text-light\" key={comment}>{comment}</p>\n                    </div>\n                )})}\n            {/* </ul> */}\n                <br/>\n                <br/>\n                <br/>\n                \n\n\n                <form onSubmit={handleSubmit}>\n                    <label className=\"text-light\" htmlFor=\"comment\">Leave a Review: </label> <br/>\n                    <input placeholder=\"Leave a comment....\" className=\"comment-box\"  type=\"text\" id=\"comment\" name=\"comment\" value={newComment} onChange={(e)=>setNewComment(e.target.value)}></input>\n                    <br/>\n\n                    <input className=\"review-btn input\" type=\"submit\"></input>\n\n                </form>\n                \n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default CommentSection;\n","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/Distance.js",["80","81"],"import React, {useState} from 'react'\nimport sun from './Pictures/sun.png'\nimport './Distance.css'\n// import styled from \"styled-components\";\nimport DistanceElement from './DistanceElement';\n\nfunction Distance({planets}){\n\n    const [planetDistance, setDistance] = useState(\"\")\n    const [currentPlanet, setCurrentPlanet] = useState(null)\n\n    // const Style = styled.img`\n    // transform: scale(1.5);\n    // transition: transform 0.5s ;`  \n\n    const planet = planets.map(item => {\n        return <DistanceElement  planets={item} key={item.id} currentPlanet={currentPlanet} setCurrentPlanet={setCurrentPlanet}/>\n     })\n    \n    return (\n        <div className=\"distance-container\">\n            <br/>\n            <h1 className=\"distance-header text-light\">Planets' Distance from the Sun</h1>\n            <br />\n            <br />\n            <br />\n            <br />\n            <div className=\"containerD\">\n                <div className=\"row\">\n                <br/>\n                <div className=\"col sun-row\">\n                    <p className=\"label text-light\">Sun</p>\n                    <img src={sun} alt=\"sun\" className=\"sun-img\" />\n                    \n                </div>\n                 {planet}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Distance;","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/Filter.js",["82","83","84","85","86","87"],"import React from 'react'\nimport { useState } from 'react'\nimport { Dropdown } from 'bootstrap';\n\nfunction Filter({setType, showAll, sortAlphabetically, sortDistance, sortRadius}){\n    \n\n    return (\n        <div>\n            <div className=\"filter-btns\" className=\"btns\">\n                <div className=\"dropdown\">\n                    <button className=\"filter-btns dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Sort</button>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                    <a onClick={sortAlphabetically} className=\"dropdown-item\" href=\"#\">Alphabetically</a>\n                    <a onClick={sortRadius} className=\"dropdown-item\" href=\"#\">Radius</a>\n                    <a onClick={sortDistance} className=\"dropdown-item\" href=\"#\">Distance from the sun</a>\n                \n                </div>\n                <button className=\"filter-btns\" onClick={(e) => setType(e.target.value)}value=\"All\">All</button>\n                <button className=\"filter-btns\" onClick={(e) => setType(e.target.value)} value=\"Terrestrial planet\">Terrestrial planet</button>\n                <button className=\"filter-btns\" onClick={(e) => setType(e.target.value)} value=\"Gas Giant\">Gas Giant</button>\n                <button className=\"filter-btns\" onClick={(e) => setType(e.target.value)} value=\"Ice Giant\">Ice Giant</button>\n                <button className=\"filter-btns\" onClick={(e) => setType(e.target.value)} value=\"Dwarf Planet\">Dwarf Planet</button>\n            </div>\n            </div>\n        </div>\n    )\n}\nexport default Filter;","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/PlanetElement.js",["88","89","90"],"import React, { useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport PlanetInfo from \"./PlanetInfo\"\n\nfunction PlanetElement({planet, handleDelete}) {\n   \n   \n    return (\n        <div className=\" text-center  col-md-4 \">\n            <div className=\"overflow\" >\n                <img src={planet.image} className=\"img-fluid card-img-top\" alt={planet.name}/>\n            </div>\n                <div className=\"card-body text-light\">\n                <h5 className=\"card-title \">{planet.name}</h5>\n                <h5 className=\"card-text text-secondary\">{planet.description}</h5>\n                {/* <NavLink to={`/planet/${planet.name}`}>View Planet</NavLink> */}\n                <a href={`/planet/${planet.name}`} \n                // onClick={(e) => {return <PlanetInfo />}} \n                className=\"btn btn-outline-success\">View Planet</a> \n                <button className=\"btn btn-outline-success\" onClick={(e) => handleDelete(planet.id)} >Delete</button>\n                \n            </div>\n        </div>\n    )\n}\nexport default PlanetElement;\n","/Users/jhanaechisholm/Phase-2/Phase2-Project/src/components/DistanceElement.js",["91","92"],"import React, {useState} from 'react'\nimport Distance from './Distance';\n\nfunction DistanceElement({planets, setCurrentPlanet, currentPlanet}){\n    console.log(planets)\n\n    return (\n        <div className=\"col planet-row\">\n            <p className=\"label text-light\">{planets.name}</p>\n            <img src={planets.image} alt={planets.name} className=\"planet-img \" onClick={() => (setCurrentPlanet(planets.id))} />\n            {/* {currentPlanet ? <p className={currentPlanet ? \"active-distanceP text-light\" : \"distanceP \"} >{planets.distanceFromSun} </p> : null} */}\n            {planets.id === currentPlanet ? <p className=\"text-light\">{planets.distanceFromSun}</p> : null}\n        </div>\n    )\n}\nexport default DistanceElement;",{"ruleId":"93","severity":1,"message":"94","line":10,"column":8,"nodeType":"95","messageId":"96","endLine":10,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"97","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":13},{"ruleId":"93","severity":1,"message":"98","line":9,"column":12,"nodeType":"95","messageId":"96","endLine":9,"endColumn":26},{"ruleId":"93","severity":1,"message":"99","line":9,"column":28,"nodeType":"95","messageId":"96","endLine":9,"endColumn":39},{"ruleId":"93","severity":1,"message":"100","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":18},{"ruleId":"93","severity":1,"message":"101","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":10,"column":42,"nodeType":"104","messageId":"105","endLine":10,"endColumn":58},{"ruleId":"106","severity":1,"message":"107","line":14,"column":21,"nodeType":"108","endLine":14,"endColumn":88},{"ruleId":"106","severity":1,"message":"107","line":15,"column":21,"nodeType":"108","endLine":15,"endColumn":80},{"ruleId":"106","severity":1,"message":"107","line":16,"column":21,"nodeType":"108","endLine":16,"endColumn":82},{"ruleId":"93","severity":1,"message":"100","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"109","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":17},{"ruleId":"93","severity":1,"message":"110","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":18},{"ruleId":"93","severity":1,"message":"100","line":1,"column":16,"nodeType":"95","messageId":"96","endLine":1,"endColumn":24},{"ruleId":"93","severity":1,"message":"111","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":16},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'image' is defined but never used.","'planetDistance' is assigned a value but never used.","'setDistance' is assigned a value but never used.","'useState' is defined but never used.","'Dropdown' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'NavLink' is defined but never used.","'PlanetInfo' is defined but never used.","'Distance' is defined but never used."]
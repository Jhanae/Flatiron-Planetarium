{"ast":null,"code":"var _jsxFileName = \"/Users/jhanaechisholm/Phase-2/Phase2-Project/client/src/components/PlanetContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PlanetElement from './PlanetElement'; // import Button from './button'\n\nimport Filter from './Filter';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlanetContainer = ({\n  data\n}) => {\n  _s();\n\n  const [planetItem, setPlanetItem] = useState(data);\n  const [searchText, setSearch] = useState(\"\");\n  const [type, setType] = useState('All');\n  let planet;\n\n  function handleDelete(planetID) {\n    const filteredArray = planetItem.filter(item => item.id !== planetID); // console.log(filteredArray)\n\n    fetch(`http://localhost:3000/PlanetData/${planetID}`, {\n      method: \"DELETE\"\n    }).then(data => setPlanetItem(filteredArray));\n  }\n\n  function sortAlphabetically() {\n    data.sort((a, b) => a.name > b.name ? 1 : -1);\n  }\n\n  function sortRadius() {\n    data.sort((a, b) => a.radius > b.radius ? 1 : -1);\n  }\n\n  function sortDistance() {\n    data.sort((a, b) => a.distanceFromSun < b.distanceFromSun ? 1 : -1);\n  } // filter data prop\n\n\n  const filterText = planetItem.filter(item => item.name.toLowerCase().includes(searchText.toLowerCase())); //  each type\n\n  const filterType = filterText.filter(item => item.type === type);\n\n  if (type === 'All') {\n    console.log(type);\n    planet = filterText.map(item => {\n      return /*#__PURE__*/_jsxDEV(PlanetElement, {\n        planet: item,\n        handleDelete: handleDelete\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n    });\n  } else {\n    console.log('cant get this function right');\n    planet = filterType.map(item => {\n      return /*#__PURE__*/_jsxDEV(PlanetElement, {\n        planet: item,\n        handleDelete: handleDelete\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planet-container container-fluid  justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Filter, {\n        sortAlphabetically: sortAlphabetically,\n        sortRadius: sortRadius,\n        sortDistance: sortDistance,\n        setType: setType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"filterSearch\",\n          type: \"text\",\n          placeholder: \"Search Plants...\",\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"circular search link icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 row\",\n      children: [planet, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PlanetContainer, \"IZHzWlEpvQkttr3QuTTnlxcRsto=\");\n\n_c = PlanetContainer;\nexport default PlanetContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlanetContainer\");","map":{"version":3,"sources":["/Users/jhanaechisholm/Phase-2/Phase2-Project/client/src/components/PlanetContainer.js"],"names":["React","useState","PlanetElement","Filter","Footer","PlanetContainer","data","planetItem","setPlanetItem","searchText","setSearch","type","setType","planet","handleDelete","planetID","filteredArray","filter","item","id","fetch","method","then","sortAlphabetically","sort","a","b","name","sortRadius","radius","sortDistance","distanceFromSun","filterText","toLowerCase","includes","filterType","console","log","map","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport PlanetElement from './PlanetElement'\n// import Button from './button'\nimport Filter from './Filter'\nimport Footer from './Footer'\n\nconst PlanetContainer = ({data}) => {\n\n    \n    const [planetItem, setPlanetItem] = useState(data)\n    const [searchText, setSearch] = useState(\"\")\n    const [type, setType] = useState('All')\n    let planet ;\n    \n    function handleDelete(planetID){\n        const filteredArray = planetItem.filter((item) => item.id !== planetID)\n        // console.log(filteredArray)\n\n        fetch(`http://localhost:3000/PlanetData/${planetID}`,{\n            method: \"DELETE\",\n        })\n        .then(data => setPlanetItem(filteredArray))\n    }\n\n    function sortAlphabetically(){\n        data.sort((a, b) => (a.name > b.name) ? 1 : -1)\n    }\n    function sortRadius(){\n        data.sort((a, b) => (a.radius > b.radius) ? 1 : -1)\n    }\n    function sortDistance(){\n        data.sort((a, b) => (a.distanceFromSun < b.distanceFromSun) ? 1 : -1)\n    }\n    \n\n    // filter data prop\n    const filterText = planetItem.filter(item => item.name.toLowerCase().includes(searchText.toLowerCase()))\n\n    //  each type\n    const filterType = filterText.filter(item => item.type === type)\n\n    if(type === 'All')\n    {\n        console.log(type)\n        planet = filterText.map(item => {\n            return <PlanetElement planet={item} key={item.id} handleDelete={handleDelete} />\n         })\n    }\n    else{\n        console.log('cant get this function right')\n        planet = filterType.map(item => {\n            return <PlanetElement planet={item} key={item.id}  handleDelete={handleDelete}  />\n         })\n    }  \n\n     return (\n        <div className=\"planet-container container-fluid  justify-content-center\">\n            <div className=\"container\">\n            \n                <Filter sortAlphabetically={sortAlphabetically} sortRadius={sortRadius} sortDistance={sortDistance} setType={setType}/>\n                <div className=\"input-group-lg\">\n                <input\n                    className=\"filterSearch\"\n                    type=\"text\"\n                    placeholder=\"Search Plants...\"\n                    onChange={(e) => setSearch(e.target.value)}\n                />\n                <i className=\"circular search link icon\" />\n                </div>\n            </div>\n            <div className=\"mb-4 row\">\n                    {planet}\n                    <br/>\n            </div>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n        </div>\n    )\n}\nexport default PlanetContainer;"]},"metadata":{},"sourceType":"module"}